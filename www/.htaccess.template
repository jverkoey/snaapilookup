# Let's make sure that we have setup the timezone for this application,
# In some php.ini files, this value is not set.  This will ensure it exists
# for every reqeust of this application.
php_value date.timezone "UTC"

# Let's also make sure that we can use the php short tag, "<?". The 
# reason this is enabled is so that we can use these short tags in our 
# php based view scripts. This allows for a shorter and cleaner view 
# script, After all PHP IS A TEMPLATING LANGUAGE :)
php_value short_open_tag "1"

# Set the error_reporting to E_ALL|E_STRICT
# Since .htaccess only take an integer (and cannot render the PHP
# contstants, we need to find out what the integer actuall is) 
#
# > php -r "echo E_ALL|E_STRICT;"
# 8191
php_value error_reporting "8191"

# The following display_*error directives instruct PHP how to display
# errors that might come up.  In a production environment, it might
# be good to set these values inside the actual VHOST definiation.
# NOTE: these display error ini's should most likely be OFF
# in your production environment
php_value display_startup_errors "1"
php_value display_errors "1"

# NOTE: by setting the above php ini values, we are ensuring that
# regardless of the servers php.ini values, we can be assured that
# our application will have these set values set on every request.




# The rules below basically say that if the file exists in the tree, just
# serve it; otherwise, go to index.php. This is more future-proof for your
# site, because if you start adding more and more content types, you don't
# need to alter the .htaccess to accomodate them.
# This is an important concept for the Front Controller Pattern which the
# ZF MVC makes use of.
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} -s [OR]
RewriteCond %{REQUEST_FILENAME} -l [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^.*$ - [NC,L]
RewriteRule ^.*$ /index.php [NC,L]

